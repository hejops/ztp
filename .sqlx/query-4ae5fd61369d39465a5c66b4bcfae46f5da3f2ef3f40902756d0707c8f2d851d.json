{
  "db_name": "PostgreSQL",
  "query": "\n        SELECT \n            -- response_status_code,\n            -- -- response_headers, -- composite type must be \"deserialised\"\n            -- response_headers as \"response_headers: Vec<HeaderPairRecord>\", \n            -- response_body\n\n            -- automatically unwrap Some(x); but what happens to nulls?\n            -- https://docs.rs/sqlx/latest/sqlx/macro.query.html#type-overrides-output-columns\n            response_status_code as \"response_status_code!\",\n            response_headers as \"response_headers!: Vec<HeaderPairRecord>\", \n            response_body as \"response_body!\"\n        FROM idempotency\n        WHERE \n            user_id = $1 AND\n            idempotency_key = $2\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "response_status_code!",
        "type_info": "Int2"
      },
      {
        "ordinal": 1,
        "name": "response_headers!: Vec<HeaderPairRecord>",
        "type_info": {
          "Custom": {
            "name": "_header_pair",
            "kind": {
              "Array": {
                "Custom": {
                  "name": "header_pair",
                  "kind": {
                    "Composite": [
                      [
                        "name",
                        "Text"
                      ],
                      [
                        "value",
                        "Bytea"
                      ]
                    ]
                  }
                }
              }
            }
          }
        }
      },
      {
        "ordinal": 2,
        "name": "response_body!",
        "type_info": "Bytea"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Text"
      ]
    },
    "nullable": [
      true,
      true,
      true
    ]
  },
  "hash": "4ae5fd61369d39465a5c66b4bcfae46f5da3f2ef3f40902756d0707c8f2d851d"
}
